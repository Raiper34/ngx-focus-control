{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./dist/ngx-focus-control/__ivy_ngcc__/fesm2015/ngx-focus-control.js","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACsC;;AAEjC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,+DAAwB,EAAE,4IAA4I;AACnM,QAAQ,wDAAiB,+EAA+E,yBAAyB,EAAE;AACnI,KAAK,EAAE,WAAW,wCAAwC,EAAE;AAC5D,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,kEAAY;AAChB;;AAEA;AACA;AACA,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,EAAE,qDAAqD,2CAA2C,EAAE,iBAAiB;AACzK,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,GAAG;AACrC,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB,cAAc,oDAAoD,gEAAyB,yBAAyB,0EAA0E,EAAE,EAAE;AAClM,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEwD;;AAExD,6C;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAA0C;;;;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,sEACA;QAAA,sEACA;QAAA,sEACA;;QAHsD,kJAA4D;QAC5D,0DAA4D;QAA5D,kJAA4D;QAC5D,0DAA4D;QAA5D,kJAA4D;;6FDKrG,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACS;;AAcjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,uEAAa;YAEb,uEAAqB;SACtB;mIAIU,SAAS,mBAVlB,2DAAY,aAGZ,uEAAa;QAEb,uEAAqB;6FAKZ,SAAS;cAZrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBAEb,uEAAqB;iBACtB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACjBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { __decorate } from 'tslib';\nimport { Input, HostListener, Directive, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nlet FocusControlDirective = class FocusControlDirective {\n    constructor() {\n    }\n    set config(val) {\n        this._config = val;\n    }\n    get config() {\n        return this._config;\n    }\n    goTo($event) {\n        var _a, _b;\n        if ($event.key === 'Tab') {\n            if ($event.shiftKey && this.config.previous) {\n                $event.preventDefault();\n                (_a = document.querySelector(this.config.previous)) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else if (!$event.shiftKey && this.config.next) {\n                $event.preventDefault();\n                (_b = document.querySelector((this.config.next))) === null || _b === void 0 ? void 0 : _b.focus();\n            }\n        }\n    }\n};\nFocusControlDirective.ɵfac = function FocusControlDirective_Factory(t) { return new (t || FocusControlDirective)(); };\nFocusControlDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FocusControlDirective, selectors: [[\"\", \"ngxFocusControl\", \"\"]], hostBindings: function FocusControlDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function FocusControlDirective_keydown_HostBindingHandler($event) { return ctx.goTo($event); });\n    } }, inputs: { config: [\"ngxFocusControl\", \"config\"] } });\n__decorate([\n    Input('ngxFocusControl')\n], FocusControlDirective.prototype, \"config\", null);\n__decorate([\n    HostListener(`keydown`, ['$event'])\n], FocusControlDirective.prototype, \"goTo\", null);\n\nlet NgxFocusControlModule = class NgxFocusControlModule {\n};\nNgxFocusControlModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxFocusControlModule });\nNgxFocusControlModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxFocusControlModule_Factory(t) { return new (t || NgxFocusControlModule)(); }, imports: [[]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusControlDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxFocusControl]'\n            }]\n    }], function () { return []; }, { config: [{\n            type: Input,\n            args: ['ngxFocusControl']\n        }], goTo: [{\n            type: HostListener,\n            args: [`keydown`, ['$event']]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxFocusControlModule, { declarations: [FocusControlDirective], exports: [FocusControlDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxFocusControlModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    FocusControlDirective\n                ],\n                imports: [],\n                exports: [FocusControlDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-focus-control\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FocusControlDirective, NgxFocusControlModule };\n\n//# sourceMappingURL=ngx-focus-control.js.map","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n}\n","<input type=\"text\" placeholder=\"Input 1\" id=\"input-1\" [ngxFocusControl]=\"{next: '#input-3', previous: '#input-2'}\">\n<input type=\"text\" placeholder=\"Input 2\" id=\"input-2\" [ngxFocusControl]=\"{next: '#input-1', previous: '#input-3'}\">\n<input type=\"text\" placeholder=\"Input 3\" id=\"input-3\" [ngxFocusControl]=\"{next: '#input-2', previous: '#input-1'}\">\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {NgxFocusControlModule} from 'ngx-focus-control';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n\n    NgxFocusControlModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}